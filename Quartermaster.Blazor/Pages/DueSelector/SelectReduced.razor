@page "/DueSelector/SelectReduced"

<div class="mb-3">
    <h3>Geminderter Beitrag</h3>
</div>

@if (EntryState == null)
    return;

<div class="mb-3">
    @{
        var isTxtValid = !string.IsNullOrEmpty(EntryState.ReducedJustification)
            || !NextStepButtonHovered;
    }

    <label class="form-label">Begründung</label>
    <textarea class="form-control @(isTxtValid ? "" : "is-invalid")" @bind=EntryState.ReducedJustification @bind:event="oninput" maxlength="2048"></textarea>
</div>

<div class="mb-3">
    @{
        var isInvalid = EntryState.ReducedAmount < 1;
    }

    <label class="form-label">Jahreswunschbeitrag</label>
    <div class="input-group @(isInvalid ? "has-validation" : "")">
        <span class="input-group-text">€</span>
        <input type="number" class="form-control @(isInvalid ? "is-invalid" : "")" min="1"
               @bind=EntryState.ReducedAmount @bind:event="oninput" />

        @if (isInvalid) {
            <div class="invalid-feedback">
                Der Jahresbeitrag darf nicht kleiner als 1€ sein.
            </div>
        }
    </div>
</div>

<div class="mb-3">
    <RadioGroup E="ReducedTimeSpan" @bind-Value="EntryState.ReducedTimeSpan" ToStringFunc="TextForReducedTimeSpan" />
</div>

<div class="mb-3">
    <h3>Beitragseinstufung</h3>
    <p>
        Im Fall einer Ablehnung des geminderten Beitrags benötigen wir dennoch deine Einstufung nach Monatseinkommen.
        Falls keine Einstufung vorgenommen wird, wirst du automatisch eingestuft.
    </p>
</div>

<div class="mb-2">
    <CardLink HRef="/DueSelector/SelectByMonthlyPay" EnabledFunc=@CanContinue @bind-Hovered=NextStepButtonHovered>
        <span>Einstufung nach Monatseinkommen</span><br />
        @if (string.IsNullOrEmpty(EntryState.ReducedJustification)) {
            <span>Begründung ist ein Pflichtfeld.</span>
        }
    </CardLink>
</div>

<div class="mb-3">
    <CardLink HRef="@($"/DueSelector/PaymentOptionSelection/{System.Net.WebUtility.UrlEncode("/DueSelector/SelectReduced")}")"
              EnabledFunc=@CanContinue @bind-Hovered=NextStepButtonHovered CardBorderType="warning">
        <span>Überspringen</span><br />
        @if (string.IsNullOrEmpty(EntryState.ReducedJustification)) {
            <span>Begründung ist ein Pflichtfeld.</span>
        }
    </CardLink>
</div>

<div>
    <a href="/DueSelector/DueTypeSelector" class="btn btn-primary">Zurück</a>
</div>